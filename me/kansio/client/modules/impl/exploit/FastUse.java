package me.kansio.client.modules.impl.exploit;

import me.kansio.client.modules.impl.*;
import me.kansio.client.modules.api.*;
import me.kansio.client.value.value.*;
import me.kansio.client.event.impl.*;
import net.minecraft.network.*;
import me.kansio.client.utils.network.*;
import net.minecraft.network.play.client.*;
import net.minecraft.item.*;
import com.google.common.eventbus.*;

@ModuleData(name = "Fast Use", category = ModuleCategory.EXPLOIT, description = "Consumes items faster")
public class FastUse extends Module
{
    private /* synthetic */ ModeValue modeValue;
    
    @Subscribe
    public void onUpdate(final UpdateEvent lllllllllllllllllllllIlIIllllIII) {
        if ((FastUse.mc.thePlayer.isUsingItem() && FastUse.mc.thePlayer.isCollidedVertically && FastUse.mc.thePlayer.getHeldItem().getItem() instanceof ItemFood) || (FastUse.mc.thePlayer.isUsingItem() && FastUse.mc.thePlayer.getHeldItem().getItem() instanceof ItemPotion)) {
            final Exception lllllllllllllllllllllIlIIlllIllI = (Exception)this.modeValue.getValueAsString();
            char lllllllllllllllllllllIlIIlllIlIl = (char)(-1);
            switch (((String)lllllllllllllllllllllIlIIlllIllI).hashCode()) {
                case 82544993: {
                    if (((String)lllllllllllllllllllllIlIIlllIllI).equals("Verus")) {
                        lllllllllllllllllllllIlIIlllIlIl = '\0';
                        break;
                    }
                    break;
                }
                case 1897755483: {
                    if (((String)lllllllllllllllllllllIlIIlllIllI).equals("Vanilla")) {
                        lllllllllllllllllllllIlIIlllIlIl = '\u0001';
                        break;
                    }
                    break;
                }
                case -1997372447: {
                    if (((String)lllllllllllllllllllllIlIIlllIllI).equals("Matrix")) {
                        lllllllllllllllllllllIlIIlllIlIl = '\u0002';
                        break;
                    }
                    break;
                }
            }
            switch (lllllllllllllllllllllIlIIlllIlIl) {
                case '\0': {
                    if (FastUse.mc.thePlayer.isUsingItem() && FastUse.mc.thePlayer.onGround && FastUse.mc.thePlayer.ticksExisted % 4 == 0) {
                        for (int lllllllllllllllllllllIlIIlllllII = 0; lllllllllllllllllllllIlIIlllllII < 8; ++lllllllllllllllllllllIlIIlllllII) {
                            final double lllllllllllllllllllllIlIIlllllll = FastUse.mc.thePlayer.posX;
                            final double lllllllllllllllllllllIlIIllllllI = FastUse.mc.thePlayer.posY + 1.0E-9;
                            final double lllllllllllllllllllllIlIIlllllIl = FastUse.mc.thePlayer.posZ;
                            FastUse.mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(lllllllllllllllllllllIlIIlllllll, lllllllllllllllllllllIlIIllllllI, lllllllllllllllllllllIlIIlllllIl, FastUse.mc.thePlayer.rotationYaw, FastUse.mc.thePlayer.rotationPitch, true));
                        }
                        break;
                    }
                    break;
                }
                case '\u0001': {
                    for (int lllllllllllllllllllllIlIIllllIll = 0; lllllllllllllllllllllIlIIllllIll < 20; ++lllllllllllllllllllllIlIIllllIll) {
                        PacketUtil.sendPacketNoEvent(new C03PacketPlayer(FastUse.mc.thePlayer.onGround));
                    }
                    break;
                }
                case '\u0002': {
                    for (int lllllllllllllllllllllIlIIllllIlI = 0; lllllllllllllllllllllIlIIllllIlI < 20; ++lllllllllllllllllllllIlIIllllIlI) {
                        PacketUtil.sendPacketNoEvent(new C08PacketPlayerBlockPlacement(FastUse.mc.thePlayer.getPosition().down(256), 256, null, 0.0f, 0.0f, 0.0f));
                        PacketUtil.sendPacket(new C03PacketPlayer.C04PacketPlayerPosition(FastUse.mc.thePlayer.posX, FastUse.mc.thePlayer.posY, FastUse.mc.thePlayer.posZ, true));
                    }
                    break;
                }
            }
        }
    }
    
    public FastUse() {
        this.modeValue = new ModeValue("Mode", this, new String[] { "Verus", "Matrix", "Vanilla" });
    }
}
