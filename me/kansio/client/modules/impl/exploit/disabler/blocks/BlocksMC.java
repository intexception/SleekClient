package me.kansio.client.modules.impl.exploit.disabler.blocks;

import me.kansio.client.modules.impl.exploit.disabler.*;
import me.kansio.client.utils.math.*;
import java.util.*;
import net.minecraft.network.*;
import me.kansio.client.utils.network.*;
import net.minecraft.init.*;
import me.kansio.client.event.impl.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.*;

public class BlocksMC extends DisablerMode
{
    private final /* synthetic */ Stopwatch timer;
    private /* synthetic */ boolean expectedTeleport;
    private final /* synthetic */ LinkedList<Packet> packets;
    
    @Override
    public void onUpdate(final UpdateEvent llIIIllIlllllI) {
        if (this.timer.timeElapsed(490L)) {
            this.timer.resetTime();
            if (!this.packets.isEmpty()) {
                PacketUtil.sendPacketNoEvent(this.packets.poll());
            }
        }
    }
    
    @Override
    public void onEnable() {
        this.expectedTeleport = false;
        this.packets.clear();
        this.timer.resetTime();
    }
    
    public BlocksMC() {
        super("BlocksMC");
        this.packets = new LinkedList<Packet>();
        this.timer = new Stopwatch();
    }
    
    boolean shouldNotRun() {
        if (this.getDisabler().autoDisable.getValue()) {
            if (BlocksMC.mc.thePlayer == null) {
                return true;
            }
            if (BlocksMC.mc.thePlayer.inventory == null) {
                return true;
            }
            if (BlocksMC.mc.thePlayer.inventory.hasItem(Items.compass)) {
                return true;
            }
        }
        return BlocksMC.mc.thePlayer == null || BlocksMC.mc.thePlayer.ticksExisted <= 5;
    }
    
    boolean isLegitC0F(final short llIIIllIllIllI) {
        return llIIIllIllIllI > 0 && llIIIllIllIllI < 100;
    }
    
    @Override
    public void onPacket(final PacketEvent llIIIlllIIIlII) {
        if (this.shouldNotRun()) {
            this.timer.resetTime();
            this.packets.clear();
            return;
        }
        if (llIIIlllIIIlII.getPacket() instanceof C0FPacketConfirmTransaction) {
            this.packets.add(llIIIlllIIIlII.getPacket());
            llIIIlllIIIlII.setCancelled(true);
            if (this.packets.size() > 300) {
                PacketUtil.sendPacketNoEvent(this.packets.poll());
            }
        }
        if (llIIIlllIIIlII.getPacket() instanceof C0BPacketEntityAction) {
            llIIIlllIIIlII.setCancelled(true);
        }
        if (llIIIlllIIIlII.getPacket() instanceof C03PacketPlayer) {
            final C03PacketPlayer llIIIlllIIIlll = llIIIlllIIIlII.getPacket();
            if (BlocksMC.mc.thePlayer.ticksExisted % 5 == 0) {
                PacketUtil.sendPacketNoEvent(new C0CPacketInput());
            }
            if (BlocksMC.mc.thePlayer.ticksExisted % 40 == 0) {
                this.expectedTeleport = true;
                llIIIlllIIIlll.y = -0.015625;
                llIIIlllIIIlll.onGround = false;
            }
        }
        if (llIIIlllIIIlII.getPacket() instanceof S08PacketPlayerPosLook && this.expectedTeleport) {
            final S08PacketPlayerPosLook llIIIlllIIIllI = llIIIlllIIIlII.getPacket();
            this.expectedTeleport = false;
            llIIIlllIIIlII.setCancelled(true);
            PacketUtil.sendPacketNoEvent(new C03PacketPlayer.C06PacketPlayerPosLook(llIIIlllIIIllI.getX(), llIIIlllIIIllI.getY(), llIIIlllIIIllI.getZ(), llIIIlllIIIllI.getYaw(), llIIIlllIIIllI.getPitch(), true));
        }
    }
}
