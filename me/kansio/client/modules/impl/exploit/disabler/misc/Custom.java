package me.kansio.client.modules.impl.exploit.disabler.misc;

import me.kansio.client.modules.impl.exploit.disabler.*;
import me.kansio.client.utils.math.*;
import java.util.*;
import net.minecraft.network.*;
import me.kansio.client.utils.network.*;
import me.kansio.client.event.impl.*;
import net.minecraft.network.play.client.*;

public class Custom extends DisablerMode
{
    /* synthetic */ Stopwatch dreamhax;
    private /* synthetic */ LinkedList<Packet> customKeepAlives;
    /* synthetic */ Stopwatch keepaliveStopwatch;
    private /* synthetic */ LinkedList<Packet> customTransactions;
    /* synthetic */ Stopwatch stopwatch;
    
    @Override
    public void onEnable() {
        this.stopwatch.resetTime();
        this.dreamhax.resetTime();
        this.keepaliveStopwatch.resetTime();
    }
    
    public Custom() {
        super("Custom");
        this.stopwatch = new Stopwatch();
        this.dreamhax = new Stopwatch();
        this.keepaliveStopwatch = new Stopwatch();
        this.customKeepAlives = new LinkedList<Packet>();
        this.customTransactions = new LinkedList<Packet>();
    }
    
    @Override
    public void onUpdate(final UpdateEvent lllIIIllIlIll) {
        if ((Custom.mc.thePlayer == null || Custom.mc.thePlayer.ticksExisted <= 5) && (Custom.mc.thePlayer == null || Custom.mc.thePlayer.ticksExisted < 5)) {
            Custom.mc.timer.timerSpeed = 1.0f;
            return;
        }
        if (this.getDisabler().getTimer().getValue()) {
            Custom.mc.timer.timerSpeed = this.getDisabler().getTimerSpeed().getValue().floatValue();
        }
        if (this.getDisabler().getVoidTeleport().getValue() && this.stopwatch.timeElapsed(this.getDisabler().getVoidTpDelay().getValue().longValue())) {
            final C03PacketPlayer lllIIIllIllIl = new C03PacketPlayer();
            lllIIIllIllIl.y = this.getDisabler().getVoidTpAmount().getValue().floatValue();
            PacketUtil.sendPacketNoEvent(lllIIIllIllIl);
        }
        if (this.getDisabler().getDelayTransactions().getValue() && this.dreamhax.timeElapsed(this.getDisabler().getDelayTransAmount().getValue().longValue())) {
            if (!this.customTransactions.isEmpty()) {
                PacketUtil.sendPacketNoEvent(this.customTransactions.poll());
            }
            this.dreamhax.resetTime();
        }
        if (this.getDisabler().getDelayKeepAlives().getValue() && this.keepaliveStopwatch.timeElapsed(this.getDisabler().getDelayKeepAliveAmount().getValue().longValue())) {
            if (!this.customKeepAlives.isEmpty()) {
                PacketUtil.sendPacketNoEvent(this.customKeepAlives.poll());
            }
            this.keepaliveStopwatch.resetTime();
        }
    }
    
    @Override
    public void onPacket(final PacketEvent lllIIIlllIIll) {
        if (Custom.mc.thePlayer == null || Custom.mc.thePlayer.ticksExisted <= 5) {
            return;
        }
        if (this.getDisabler().getCancelKeepAlives().getValue() && lllIIIlllIIll.getPacket() instanceof C00PacketKeepAlive) {
            lllIIIlllIIll.setCancelled(true);
        }
        if (this.getDisabler().getCancelTransactions().getValue() && lllIIIlllIIll.getPacket() instanceof C0FPacketConfirmTransaction) {
            lllIIIlllIIll.setCancelled(true);
        }
        if (this.getDisabler().getSendC0C().getValue() && lllIIIlllIIll.getPacket() instanceof C03PacketPlayer) {
            if (!this.getDisabler().getMaxc0c().getValue()) {
                PacketUtil.sendPacketNoEvent(new C0CPacketInput());
            }
            else {
                PacketUtil.sendPacketNoEvent(new C0CPacketInput(Float.MIN_VALUE, Float.MIN_VALUE, false, false));
            }
        }
        if (this.getDisabler().getSpoofOnGround().getValue() && lllIIIlllIIll.getPacket() instanceof C03PacketPlayer) {
            final C03PacketPlayer lllIIIllllIII = lllIIIlllIIll.getPacket();
            lllIIIllllIII.onGround = true;
            PacketUtil.sendPacketNoEvent(lllIIIllllIII);
            lllIIIlllIIll.setCancelled(true);
        }
        if (this.getDisabler().getOffGround().getValue() && lllIIIlllIIll.getPacket() instanceof C03PacketPlayer) {
            final C03PacketPlayer lllIIIlllIlll = lllIIIlllIIll.getPacket();
            lllIIIlllIlll.onGround = false;
            lllIIIlllIlll.y = 0.15;
            PacketUtil.sendPacketNoEvent(lllIIIlllIlll);
            lllIIIlllIIll.setCancelled(true);
        }
        if (this.getDisabler().getDelayKeepAlives().getValue() && lllIIIlllIIll.getPacket() instanceof C00PacketKeepAlive) {
            this.customKeepAlives.add(lllIIIlllIIll.getPacket());
            lllIIIlllIIll.setCancelled(true);
        }
        if (this.getDisabler().getDelayTransactions().getValue() && lllIIIlllIIll.getPacket() instanceof C0FPacketConfirmTransaction) {
            this.customTransactions.add(lllIIIlllIIll.getPacket());
            lllIIIlllIIll.setCancelled(true);
        }
        if (this.getDisabler().getSpectateSpoof().getValue() && lllIIIlllIIll.getPacket() instanceof C03PacketPlayer) {
            final C03PacketPlayer lllIIIlllIllI = lllIIIlllIIll.getPacket();
            lllIIIlllIllI.onGround = false;
            PacketUtil.sendPacketNoEvent(new C18PacketSpectate(Custom.mc.thePlayer.getUniqueID()));
            PacketUtil.sendPacketNoEvent(new C13PacketPlayerAbilities(Custom.mc.thePlayer.capabilities));
        }
        if (this.getDisabler().getAbilitiesSpoof().getValue() && lllIIIlllIIll.getPacket() instanceof C13PacketPlayerAbilities) {
            final C13PacketPlayerAbilities lllIIIlllIlIl = lllIIIlllIIll.getPacket();
            lllIIIlllIlIl.flying = true;
            lllIIIlllIlIl.invulnerable = true;
            lllIIIlllIlIl.allowFlying = true;
            lllIIIlllIlIl.creativeMode = false;
        }
    }
}
