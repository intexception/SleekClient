package me.kansio.client.modules.impl.exploit.disabler.misc;

import me.kansio.client.modules.impl.exploit.disabler.*;
import me.kansio.client.event.impl.*;
import me.kansio.client.gui.notification.*;
import javax.vecmath.*;

public class Test2 extends DisablerMode
{
    /* synthetic */ int morganNullVecTicks;
    
    @Override
    public void onUpdate(final UpdateEvent lIlllllIIlII) {
        if (lIlllllIIlII.isPre()) {
            final int lIlllllIlIII = 15;
            if (this.getDisabler().getRepeatPos() == null) {
                this.morganNullVecTicks = 0;
            }
            else {
                if (this.morganNullVecTicks == 1) {
                    NotificationManager.getNotificationManager().show(new Notification(Notification.NotificationType.INFO, "Disabler", "Validating Pos", 1000));
                }
                final Vector3d lIlllllIlIIl = this.getDisabler().getRepeatPos();
                if (this.morganNullVecTicks >= lIlllllIlIII) {
                    this.getDisabler().setRepeatPos(null);
                }
                else {
                    lIlllllIIlII.setOnGround(true);
                    Test2.mc.thePlayer.setPosition(lIlllllIlIIl.x, lIlllllIlIIl.y, lIlllllIlIIl.z);
                    Test2.mc.thePlayer.motionY = 0.0;
                    Test2.mc.thePlayer.motionX = 0.0;
                    Test2.mc.thePlayer.motionZ = 0.0;
                }
                ++this.morganNullVecTicks;
            }
        }
    }
    
    public Test2() {
        super("Test 2");
        this.morganNullVecTicks = 0;
    }
    
    @Override
    public void onEnable() {
        this.getDisabler().setRepeatPos(null);
        this.morganNullVecTicks = 0;
    }
}
